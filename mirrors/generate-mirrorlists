#!/usr/bin/python
import pkg_resources
pkg_resources.require("TurboGears")

from sqlobject import *
from sqlobject.sqlbuilder import *
import sys, os
import turbogears
from mirrors.model import *

from os.path import *
import sys

# first look on the command line for a desired config file,
# if it's not on the command line, then
# look for setup.py in this directory. If it's not there, this script is
# probably installed
if len(sys.argv) > 1:
    turbogears.update_config(configfile=sys.argv[1], 
        modulename="mirrors.config")
elif exists(join(dirname(__file__), "setup.py")):
    turbogears.update_config(configfile="dev.cfg",
        modulename="mirrors.config")
else:
    turbogears.update_config(configfile="prod.cfg",
        modulename="mirrors.config")

from turbogears.database import PackageHub
hub = PackageHub("mirrors")
__connection__ = hub


def trim_url_list(urls):
    for u in urls:
        us = u.split('/')
        uprotocol = us[0]
        umachine = us[2]
        if uprotocol.startswith('ftp'):
            for v in urls:
                vs = v.split('/')
                vprotocol = vs[0]
                vmachine = vs[2]
                if umachine == vmachine and vprotocol.startswith('http'):
                    del urls[urls.index(u)]
    return urls



for r in Repository.select():
    urls = directory_mirror_urls(r.directory.name, include_private=True) # fixme - won't include private when we have real data
    for u in urls:
        if not u.startswith('http') and not u.startswith('ftp'):
            urls.remove(u)
    urls = trim_url_list(urls)

    f = open('mirrorlists/%s' % r.name, 'w')
    for u in urls:
        f.write("%s\n" % u)
    f.close()
