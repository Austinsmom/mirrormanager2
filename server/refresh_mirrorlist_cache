#!/usr/bin/python
__requires__ = 'TurboGears[future]'
import pkg_resources
pkg_resources.require("TurboGears")

from sqlobject import *
import sys
import turbogears
from mirrormanager.model import *
from mirrormanager.mirrorlist import populate_all_caches, dump_caches
from optparse import OptionParser
import mirrormanager.zonecreator

from turbogears.database import PackageHub
hub = __connection__ = None

options = None

def doit():
    global options
    populate_all_caches()
    dump_caches(options.output)
    mirrormanager.zonecreator.writeZoneFiles()

def main():
    global options
    parser = OptionParser(usage=sys.argv[0] + " [options]")
    parser.add_option("-c", "--config",
                      dest="config", default='dev.cfg',
                      help="TurboGears config file to use")
    parser.add_option("-o", "--output",
                      dest="output", default='/var/lib/mirrormanager/mirrorlist_cache.pkl',
                      help="output file")

    (options, args) = parser.parse_args()

    turbogears.update_config(configfile=options.config,
                             modulename="mirrormanager.config")
    global hub
    global __connection__
    hub = PackageHub("mirrormanager")
    __connection__ = hub
    
    doit()



if __name__ == "__main__":
    sys.exit(main())
        
